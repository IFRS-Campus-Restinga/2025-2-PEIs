# Generated by Django 5.2.5 on 2025-09-22 18:02

import django.core.validators
import django.db.models.deletion
import pei.models.ataDeAcompanhamento
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Aluno',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(7), django.core.validators.MaxLengthValidator(60)])),
                ('matricula', models.CharField(max_length=20, unique=True, validators=[django.core.validators.RegexValidator('^\\d+$', 'A matrícula deve conter apenas números')])),
                ('email', models.EmailField(max_length=254, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AtaDeAcompanhamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dataReuniao', models.DateTimeField(validators=[pei.models.ataDeAcompanhamento.validaDataFutura], verbose_name='Data da Reunião')),
                ('participantes', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(5), django.core.validators.MaxLengthValidator(100)])),
                ('descricao', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(5), django.core.validators.MaxLengthValidator(100)])),
                ('ator', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(5), django.core.validators.MaxLengthValidator(100)])),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CoordenadorCurso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(7), django.core.validators.MaxLengthValidator(60)])),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Disciplina',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(1)])),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DocumentacaoComplementar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('autor', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(5), django.core.validators.MaxLengthValidator(100)])),
                ('tipo', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(5), django.core.validators.MaxLengthValidator(100)])),
                ('caminho', models.CharField(max_length=255, validators=[django.core.validators.MinLengthValidator(5), django.core.validators.MaxLengthValidator(255)])),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Pedagogo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(7), django.core.validators.MaxLengthValidator(100)])),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PEIPeriodoLetivo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_criacao', models.DateField()),
                ('periodo', models.CharField(choices=[('BIMESTRE', 'Bimestre'), ('TRIMESTRE', 'Trimestre'), ('SEMESTRE', 'Semestre')], default='SEMESTRE', max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Pessoa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(7), django.core.validators.MaxLengthValidator(100)])),
                ('categoria', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(3)])),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Professor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=150)),
                ('matricula', models.CharField(max_length=20, unique=True, validators=[django.core.validators.RegexValidator('^\\d+$', 'A matrícula deve conter apenas números')])),
                ('email', models.EmailField(max_length=254, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Curso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(1)])),
                ('nivel', models.CharField(choices=[('Superior', 'Superior'), ('Ensino Médio', 'Ensino Medio'), ('Não informado', 'Não informado')], default='Não informado', max_length=100, validators=[django.core.validators.MinLengthValidator(1)])),
                ('coordenador', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='coordenador', to='pei.coordenadorcurso')),
                ('disciplinas', models.ManyToManyField(blank=True, related_name='cursos', to='pei.disciplina')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ComponenteCurricular',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('objetivos', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(7), django.core.validators.MaxLengthValidator(100)])),
                ('conteudo_prog', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(1), django.core.validators.MaxLengthValidator(3)])),
                ('metodologia', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(7), django.core.validators.MaxLengthValidator(255)])),
                ('cursos', models.ManyToManyField(related_name='componentes_curriculares', to='pei.curso')),
                ('disciplinas', models.ManyToManyField(related_name='componentes_curriculares', to='pei.disciplina')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Parecer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('texto', models.TextField(help_text='Tu tem 1000 caracteres para escrever')),
                ('data', models.DateField(auto_now_add=True)),
                ('periodo_letivo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pareceres', to='pei.peiperiodoletivo')),
                ('professor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pareceres', to='pei.professor')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
